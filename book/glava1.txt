
          Глава 1. 

          Введение в .NET

Основы языка C#, первые программы 
Многопоточное программирование
Клиент-серверные приложения 
Создание мобильных приложений на C#.

1.1 Что такой .NET
Платформа .NET Framework - это технология, поддреживающая созание и выполнение нового поколения приложений и веб-служб. 

При разработке платформы .NET Framework учитывались следующие цели:
*Обеспечение среды выполнения кода, которая бы минимизировали конфликты при развертывании программного обеспечения и управлении версиями. 
*Обеспечение объектно-ориентированной среды программирования для локального сохранения и выолнения объектного кода , либо для удаленного . распределенного выполения. 

*Предоставление среды выполнения кода, гарантирующей безопасное выполнение кода, включая кода, созданный неизвестным или не полностью доверенным сторонним разработкчиком. 
* Предоставление единых принципов разработки для разных типов приложений, таких как приложения Windows и веб-приложения. 

*Обеспечение среды выолнения кода, которая бы исключала проблемы с производительностью сред выполнения сценариев или интерпретируемого кода. 
*Разработка взаимодействия на основе промышленных стандартов, что позволяет интегрировать код платформы .NET Framework с любым другим кодом. 

Платформа .NET Framework состоит из общеязыковой среды выполнения (среды CLR или Common Language Runtime) и библиотеки классов .NET Framework.
Основая задача платформы .NET Framework - среда CLR. 
Ее можно считать агентом, управляющим кодом во время выполнения и предоставляющим основные службы, такие как управление памятью, потоками и удаленное взаимнодействие. 
Основная задача среды выполнение - это управление кодом. 
Код, обращающийся к среде выполнения, называют управляемым кодом, а код, который не обращается к среде выполнения, называют неуправляемым кодом. 
Библиотека классов является комплексной объектно-ориентированной коллекцией типов, применяемых для разрабокти приложений - начиная с консольных приложений, запускаемых из командной строки, и заканчивая приложениями, использующими последние технологические возможности ASP.NET, например, Web.Forms и веб-службы XML.
Конечено, с помошью .NET можно создать и обычные Windows-приложения с интерфейсом пользователя (GUI).

Платформа .NET Framework может размещаться неуправляемыми компонентами. 
Такие компоненты загружают среду CLR в собственные процессы и запускают выполнение управляемого кода, что в итоге создает программную среду, которая позволяет использовать средства управляемого и неуправляемого выполения. 

Среда CLR управляет памятью, выполнением потоков, выполнением кода, проверкой безопасности кода, компиляцией и другими системными службами. 
Все эти средства являются внутренными дл управляемого кода, который выполняется в среде CLR. 
Из соображений безопасноти управляемым компонентам присваивают разные степени доверия, которые зависят от многих факторов. 
Управляемый компонент может или не может выполнять операции доступа к файлам, операции доступа к реестру и другие важные функции. 
Также среда выполения обеспечивает управление доступом для кода. Пользователи могут доверить исполняемому приложению, которое внедрено веб-страницу, воспроизведние звука, но при этом не разрешить ему доступ к файловой системе и личным данным. 
CLR реализует инфраструктуру строгой типизации и проверки кода, которую называеют системой общих типов (CTS, Common Type System)/
Такая система обеспечивает смоописание всего управляемого кода. 
В результате все это приводит к надежности кода. 
CLR может раземещатся в серверных приложениях, таких как Microsoft SQL Server и службы IIS (internet Information Services.)

Такая инфраструктура позволяет использовать управляемый код для разработки собственной логики программ, пользуясь при этом высочайшей производительностью лучших серверов, которые поддерживают размещение среды выполнения. 

Теперь поговорим о библиотеке классов .NET Framework. 
Библиотека классов платформы представляет собой коллекцию типов, которые тесно интегрируются со средой CLR. 
Понятно, что библиотека является объектно-ориентированной. 
Библиотека предоставляет типы, из которых управляемый код пользователя может наследовать функции. 
Это упрощает работу с типами .NET, но и уменьшает время, затрачиваемое на изучение новых средств платформы .NET.
В коллекциях .NET реализуется набор интерфейсов, которые можно использовать для разрабокти пользовательсикх классов коллекций, которые могут объединяться с классами .NET.

Основные функции .NET следущие: 
*Богатая функциональность. Платфома .NET Framework предоставляет богатый набор фунционала "из коробки". 
Она содержит сотни классов, которые предоставляют функциональность, готовую к использованию в ваших приложениях. 
Это означает, что разработчику не нужно вникать в низкоуровневые детали различных операций, таких как I/O, сетевое взаимодейтвие и т.д. 
*Простая разработка веб-приложений. 
ASP.NET -это технология, доступная на платформе .NET для разработки динамических веб-приложений. 
ASP.NET предоставляет управляемую событиями модель программирования ( подобную Visual Basic 6, которая упрощает разрабокту веб-страниц).
ASP.NET предоставляет различные элементы пользовательского инетерфейса (таблицы, сетки, календари и т.д) что существенно упрощает упрощает задачу программиста. 

* Поддержка ООП. Преимущества объектно-ориентированного программирования известны всем. 
Платформа.NET предоставляет полностью объектно-ориентированное окружение. 
Даже примитивные типы вроде целых чисел и символов теперь считаются объектами. 

*Поддержка многоязычности. Как правило, в больших команиях есть программисты, пишущие на разных языках. 
Есть те, кто предпочитает C++, Java или Visual Basic. 
Чтобы переучить человека, нужно потратить время и деньги. Платформа .NET позволяет человеку писать на том языке к которому он привык 

*Автоматическое управление памятью. 
Утечки памяти - серьезная причина сбоя многих приложений .NET позволяет программисту не заботиться об  управлении паятью, а сконцентрироваться на главном - на приложении. 

Совместимость с COM и СOM+. 
Ранее, до появления .NET, COM был стандартом де-факто для компонентизированной разработки приложений. .NET полностью совместима c COM и COM+.

Поддержка XML. Платформа .NET предоставляет XML веб-сервисы, которые основаны на стандартах вроде HTTP, XML и SOPA.

Простое развертывание и настройка. 
Развертывание Windows-приложений, использующих компоненты COM, являлось сложной задачей. 
Однако .NET существенно упростила ее, устранив тем саммым еще одну причину головной боли любого программиста, использующего COM.

Бещопасность. Windows-платфома всегда подвергалась критике за плохую безопасность. Microsoft приложений. Безопасность типов, безопасность доступа к коду, ауентификация на очнове ролей - все это делает приложения надежными и безопасными. 

1.2 История .NET 
В июле 2000 года на конференции PDC (Professional Developer Conference) компания Microsoft анонсировала новый фреймворк для разработки программного обеспечения - .NET Framework. 
Первая же бета-версия .NET Framework SDK Beta 1 была опубликована на сайте Microsoft 12 ноября 2000 года, однако она была настолько "сырой", что Microsoft рекомендовала ее устанавливать только на компьютеры, предназначенные для тестирования. 
Как говорится, первый блин всегда комом. 
И таким комом была первая бета-версия .NET. 

Наверное, вам будет интересно узнает, что изначально платформа должна была называться Microsoft.Net, однако, Билл Гейтс решил переименовать ее просто в .NET. 
Также он заявил, что "стратегия корпорации целиком и полностью будет опередляться платформой .NET" и что все продукты компании со временем будут переписаны с учетом этой платформы. 

Первая версия .NET появилась лишь два года спустя - 1 мая 2002 года. 
В целом, таблица 1.1 содержит информацию обо всех версиях .NET , выпущенных с 2002 года. 

Таблица 1.1. Версии NET

___________________________________________________________________________________________
|  Версия     |  Дата выхода      |    Visual Studio   | По умолчанию в       |  Заменяет |
|             |                   |                    | Windows              |           |
|_____________|___________________|____________________|______________________|___________|
|  1.0        | 1 мая 2002 г.     |  Visual Studio     |         -            |     -     |
|_____________|___________________|____________________|______________________|___________|
|  1.1        | 1 апреля 2003 г.  |  Visual Studio     |     Windows Server   |           |
|             |                   |  .NET 2003         |       2003           |   1.0     |
|_____________|___________________|____________________|______________________|___________|
|  2.0        | 11.июня 2005 г.   |  Visual Studio     |   Windows Vista      |   -       |
|             |                   |     2005           |    Windows 7,        |           |
|             |                   |                    |  Windows Server      |           |
|             |                   |                    |   2008 R2            |           |
|_____________|___________________|____________________|______________________|___________|
|   3.0       |   6 Ноября 2006 г |   Visual Studio    |  Windows Vista,      | 2.0       |
|             |                   | 2005 + расширения  | Windows Server 2008, |           |
|             |                   |                    | Windows 7, Windows   |           |
|             |                   |                    |  Server 2008 R2      |           |
|_____________|___________________|____________________|______________________|___________|
|    3.5      |   9 ноября 2007 г |  Visual Studio     | Windows 7, Windows   | 2.0, 3.0  |
|             |                   |      2008          |  server 2008 R2      |           | 
|_____________|___________________|____________________|______________________|___________|
|    4.0      | 12 апреля 2010 г. |  Visual Studio     |  Windows 8, Windows  | -         |
|             |                   |    2010            |   Server 2012        |           |
|_____________|___________________|____________________|______________________|___________|
|    4.5      | 15 августа 2012 г.| Visual Studio 2012 | Windows 8, Windows   | 4.0       |
|             |                   |                    | Server 2012          |           |
|_____________|___________________|____________________|______________________|___________|
|
