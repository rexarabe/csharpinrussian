Основы языка  программирования C# 

Лекция 2. Основы языка программирования C#

План 
1. Обзор язык C#.
2. Типы данных. 
3. Консольный ввод-вывод. 
4. Основные операции.
5. Операторы языка C#.

1. Обзор языка C#

C# - современный универсальный высокоуровневый объектно-ориентированный язык программирования, созданный в 1998-2001 гг компанией Microsoft как средство разработки приложений для платформы Microsoft .NET Framework . 

C# относится к семейству языков с C-подобным синтаксисом. 
На его разработчиков значительное влияние оказали языки Java и C++. 
Он поддерживает такие возможности как: 
* инкапсуляцию, 
* наследование,
* полиморфизм, 
* перегрузку операторов, 
* статическую типизаицию;
* итераторы; 
* комментарии в формате XML; 
* и многое другое. 

1. Обзор языка C#
Основные преимущества языка C#: 
* поддержка большинства продуктов Microsoft; 
* фиксированный размер базовых типов данных (int - 32-бита; long - 64), что улучшает возможности портирования (переноса) языка;
* автоматическая "сборка мусора" (освобождение памяти);
* низкий "порог вхождения" (синтаксис C# считается наиболее понятным и подходящим для новичков);
* большое количество вакансий на должность C#- программиста. 

Недостатки C#:
* приоритетная ориентированность на платформу Windows (хотя в настоящее время активно развиваются проекты по портированию .NET Framework на другие платформы);
* использование языка бесплатно только в определенных случаях (для небольших фирм, индивидуальных программистов, стартапов и учащихся).

Простое консольное приложение на C# будет иметь следующий вид: 

using System; 

namespace hello 
{
  //Класс запуска приложения 
  class Program
  {
    //Метод Main является точкой входа в программу 
    static void Main(string[] args)
    {
      //Вывод текстового сообщения на экран
      Console.WriteLine("Hello World!");
    }
  }
}

Примечание: как и C++, язык C# является регистрозависимым.

В C# имеются три типа комментариев:
* однострочный;
* многострочный;
* документирующий XML-комментарий. 

Однострочный комментарий может начинаться в люблй позиции строки программного кода. 
Он начинается с двух символов "//" и длится до конца строки. 
Например: 
// Это комментарий 
Console.WriteLine("Hello World!"); // Это тоже комментарий

Многострочный комментарий может состоять из произвольного количества строк. 
Он начинается с двух символвов "/*" и заканчивается - "*/"
Например: 
/*
Это многострочный 
комментарий. 
Он состоит из пяти строк...
*/
Примечание: Многосточные комментарии не могут быть вложенными

Документирующий XML-комментарий начинается с трех символов <///>. 
Его предназнаечние - автоматическая генерация XML-документации. 
Для этого применяются специальные теги XML-документации, такие, например, как <para> (для структурирования текста), <summary> (описания какого-либо элемент) и др. 

Например: 

using System; 
///<summary>
/// Программа "Hello World!"
///</summary>
namespace hello 
{
  ///<summary>
  ///Класс запуска приложения
  ///</summary>
  class Program
  {
    ///<summary>
    ///Метод Main является точкой входа в программу 
    ///<para>Он имеет аргумент - параметры командной строки </para>
    ///</summary>

    static void Main(string[] args)
    {
      Console.WriteLine("Hello World!");
    }
  }
}


2. Типы данных 

C# является строго типизированынм языком. 
Т.е., компилятор и среда времени выполнения CLR строго следят за соответсвием типов данных в выражениях. 
Каждая переменная перед использованием должна быть объявлена. 
Синтаксис описания переменной имеет следующий формат: 

<тип><имя_переменной> [<инициализация>][,...];

Т.е., сначала указывается тип переменной, затем ее имя. 
При необходимости переменной при ее объявлении может быть присвоено некоторое начальное значение. 

Все типы данных в C# можно условно разделить на: 
* простые;
* структурные;
* ссылочные;
* перечисления. 

К простым типам данных относятся логические и числовые типы. 
Логический (булевый) тип обозначается ключевым словом bool. 
Он может принимать одно из двух возможных значений true или false. 

Например: 
bool isFree = false;

Числовые типы данных в C# делятся на целочисленные типы и типы с плавющей точкой (вещественные).
К целочисленным относятся sbyte, byte, short, ushort, int, uint, long, ulong, и char. 
В табл. 1 приведены их приведены их характеристики. 

Таблица 1 - Характеристики целочисленных типов данных C#

Тип данных      Размер(в разрядах)           Диапазон допустимых значенний
sbyte           8-битное целое со знаком       -128 - +127
byte            8-битное целое без знака         0 - 256
char            16-битный символ Unicode        0000-FFFF
short           16-битное целое со занком      -32768 - +32767
ushort          16-битное целое без знака      0 - 65535
int             32-битное целое со знаком      -2147483648 - +2147483647
uint            32-битное целое без знака       0-4294967295
long            64-битное целое со знаком       -922337203685
ulong           64-битное целое без знака       0 - 1844674444444444444444

Тип данных char предназначен для хранения одного символа в формате Unicode. 
Например: 

char b = 'H';
char c = '\u023C';
char d = '\x000D';

   Таблица 2 - Допустимые управляющие последовательности C#

Управляющая последовательность            Описание
 \'                                       Одинарная кавычка 
 \"                                       Двойная кавычка 
  \\
